@page "/login"
@inject ApiService ApiService
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Login</h3>

@if (isLoading)
{
    <p>Carregando...</p>
}
else
{
    <div>
        <label>Email:</label>
        <input @bind="email" type="text" />

        <label>Senha:</label>
        <input @bind="password" type="password" />

        <button @onclick="PerformLogin">Entrar</button>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p style="color: red;">@errorMessage</p>
        }
    </div>
}

@code {
    private bool isLoading = false;
    private string email = "";
    private string password = "";
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        if (await AuthService.IsAuthenticated())
        {
            Navigation.NavigateTo("/caixa");
        }
    }

    private async Task PerformLogin()
    {
        isLoading = true;
        errorMessage = "";

        var response = await ApiService.Login(email, password);

        if (!response.HasError && response.Data)
        {
            if (await AuthService.IsAuthenticated())
            {
                Navigation.NavigateTo("/caixa");
            }
            else
            {
                errorMessage = "Erro ao armazenar token.";
            }
        }
        else
        {
            errorMessage = "Email ou senha incorretos.";
        }

        isLoading = false;
    }
}
